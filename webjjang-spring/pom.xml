<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>org.zerock</groupId>
	<artifactId>controller</artifactId>
	<name>webjjang-spring</name>  <!--  Project 이름 -->
	<packaging>war</packaging>
	<version>1.0.0-BUILD-SNAPSHOT</version>
	<properties>
		<java-version>11</java-version>	<!--  자바 version : properties 형식으로 설정 -->
		<org.springframework-version>5.0.7.RELEASE</org.springframework-version>
		<org.aspectj-version>1.6.10</org.aspectj-version>
		<org.slf4j-version>1.6.6</org.slf4j-version>
		<!-- ERROR 메세지 
			[WARNING] Using platform encoding (UTF-8 actually) to copy filtered resources, i.e. build is platform dependent! 
		 -->
		<project.build.sourceEncoding>utf-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>utf-8</project.reporting.outputEncoding>
		
		<!-- 현재 진행하고 있는 프로젝트의 절대 위치로 변경해서 사용하셔야만 합니다. -->
		<project.basedir>C:\eclipse-spring\workspace\webjjang_spring</project.basedir>

	</properties>
	<dependencies>
		<!-- Spring -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
			<version>${org.springframework-version}</version>
			<exclusions>
				<!-- Exclude Commons Logging in favor of SLF4j -->
				<exclusion>
					<groupId>commons-logging</groupId>
					<artifactId>commons-logging</artifactId>
				 </exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
			<version>${org.springframework-version}</version>
		</dependency>
				
		<!-- AspectJ -->
		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjrt</artifactId>
			<version>${org.aspectj-version}</version>
		</dependency>	
		
		<!-- Logging -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>${org.slf4j-version}</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>jcl-over-slf4j</artifactId>
			<version>${org.slf4j-version}</version>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
			<version>${org.slf4j-version}</version>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<version>1.2.17</version>
<!-- 			<exclusions> -->
<!-- 				<exclusion> -->
<!-- 					<groupId>javax.mail</groupId> -->
<!-- 					<artifactId>mail</artifactId> -->
<!-- 				</exclusion> -->
<!-- 				<exclusion> -->
<!-- 					<groupId>javax.jms</groupId> -->
<!-- 					<artifactId>jms</artifactId> -->
<!-- 				</exclusion> -->
<!-- 				<exclusion> -->
<!-- 					<groupId>com.sun.jdmk</groupId> -->
<!-- 					<artifactId>jmxtools</artifactId> -->
<!-- 				</exclusion> -->
<!-- 				<exclusion> -->
<!-- 					<groupId>com.sun.jmx</groupId> -->
<!-- 					<artifactId>jmxri</artifactId> -->
<!-- 				</exclusion> -->
<!-- 			</exclusions> -->
<!-- 			<scope>runtime</scope> --> <!-- 범위 지정 -->
		</dependency>

		<!-- @Inject -->
		<dependency>
			<groupId>javax.inject</groupId>
			<artifactId>javax.inject</artifactId>
			<version>1</version>
		</dependency>
				
		<!-- Servlet -->
<!-- 		<dependency> -->
<!-- 			<groupId>javax.servlet</groupId> -->
<!-- 			<artifactId>servlet-api</artifactId> -->
<!-- 			<version>2.5</version> -->
<!-- 			<scope>provided</scope> -->
<!-- 		</dependency> -->
		<!-- Servlet version 업그레이드-->
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<version>3.1.0</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>javax.servlet.jsp</groupId>
			<artifactId>jsp-api</artifactId>
			<version>2.1</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>jstl</artifactId>
			<version>1.2</version>
		</dependency>
		
	<!-- lombok(롬복) 관련 라이브러리 -->
		<!-- https://mvnrepository.com/artifact/org.projectlombok/lombok -->
		<dependency>
		    <groupId>org.projectlombok</groupId>
		    <artifactId>lombok</artifactId>
		    <version>1.18.38</version>
		    <scope>provided</scope>
		</dependency>
		
	<!-- 스프링 테스트 - Junit -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<version>${org.springframework-version}</version>
		</dependency>
		
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.12</version>
			<scope>test</scope> <!-- test 할때만 사용 -->
		</dependency>   
		
<!-- DB 관련 라이브러리 -->
	<!-- 데이터 베이스 연결 관련  -->
		<!-- https://mvnrepository.com/artifact/com.oracle.database.jdbc/ojdbc6 - oracle 11-->
		<dependency>
		    <groupId>com.oracle.database.jdbc</groupId>
		    <artifactId>ojdbc6</artifactId>
		    <version>11.2.0.4</version>
		</dependency>
		
		<!-- https://mvnrepository.com/artifact/com.zaxxer/HikariCP - database 연결 (root-context.xml설정)-->
		<dependency>
		    <groupId>com.zaxxer</groupId>
		    <artifactId>HikariCP</artifactId>
		    <version>2.7.4</version>
		</dependency>
		
	<!--  sql query 부분 -->		
		<!-- https://mvnrepository.com/artifact/org.mybatis/mybatis -->
		<dependency>
		    <groupId>org.mybatis</groupId>
		    <artifactId>mybatis</artifactId>
		    <version>3.4.6</version>
		</dependency>
		
		<!-- https://mvnrepository.com/artifact/org.mybatis/mybatis-spring -->
		<dependency>
		    <groupId>org.mybatis</groupId>
		    <artifactId>mybatis-spring</artifactId>
		    <version>1.3.2</version>
		</dependency>
		
		<!-- https://mvnrepository.com/artifact/org.springframework/spring-tx -->
		<dependency>
		    <groupId>org.springframework</groupId>
		    <artifactId>spring-tx</artifactId>
		    <version>${org.springframework-version}</version>
		</dependency>
		
		<!-- https://mvnrepository.com/artifact/org.springframework/spring-jdbc -->
		<dependency>
		    <groupId>org.springframework</groupId>
		    <artifactId>spring-jdbc</artifactId>
		    <version>${org.springframework-version}</version>
		</dependency>
		
	<!-- database 로그출력 라이브러리 -->
		<!-- https://mvnrepository.com/artifact/org.bgee.log4jdbc-log4j2/log4jdbc-log4j2-jdbc4 -->
		<dependency>
		    <groupId>org.bgee.log4jdbc-log4j2</groupId>
		    <artifactId>log4jdbc-log4j2-jdbc4</artifactId>
		    <version>1.16</version>
		</dependency>
		
	<!-- 페이지 처리 -->
<!-- 		<dependency> -->
<!-- 			<groupId>com.webjjang</groupId> -->
<!-- 			<artifactId>util.PageObject</artifactId> -->
<!-- 			<version>2.1</version> -->
<!-- 			<scope>system</scope> 내 컴퓨터에서 찾겠다 -->
			<!-- lombok lib를 설치하면 project.basedir 프로퍼티가 사라져서 오류가 난다.
			해결 : 프로퍼트 등록 해준다. -->
<!-- 			<systemPath>${project.basedir}/src/main/webapp/WEB-INF/lib/pageObject2.1.jar</systemPath> -->
<!-- 		</dependency> -->

	<!-- 
		sitemesh란 : 
			웹페이지를 구성하는 레이아웃을 효율적으로 만들수 있게 도와주는 프레임워크.
			보통 웹페이지들은 top, left menu, contents, (right menu), footer로 구성되는데 
			메뉴이동시 그 폼을 유지한채 중간의 컨텐츠만 변경되는 경우가 대부분인데 
			모든 페이지를 중복으로 구성하는 것은 비효율적이고 관리도 어렵기 때문에
			공통된 부분들을 한곳에 집중 해서 처리하고 변경되는 부분만 변경될 수 있도록 해주는 프레임워크이다.
	 -->
		<!-- https://mvnrepository.com/artifact/opensymphony/sitemesh -->
		<dependency>
		    <groupId>opensymphony</groupId>
		    <artifactId>sitemesh</artifactId>
		    <version>2.4.2</version>
		</dependency>
		
	<!-- VO 객체를 JSON 데이터 문자열로 만들어 주는 라이브러리 -->
		<!-- https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-databind -->
		<dependency>
		    <groupId>com.fasterxml.jackson.core</groupId>
		    <artifactId>jackson-databind</artifactId>
		    <version>2.9.4</version>
		</dependency>
		
	<!-- fileupload 관련 -->
		<!-- 설정
			클라이언트에서 서버로 데이터를 보낸다. servlet
		 -->
		<!-- https://mvnrepository.com/artifact/commons-fileupload/commons-fileupload -->
		<dependency>
		    <groupId>commons-fileupload</groupId>
		    <artifactId>commons-fileupload</artifactId>
		    <version>1.3.3</version>
		</dependency>
		
		
		
		
	</dependencies>
    <build>
        <plugins>
            <plugin>
                <artifactId>maven-eclipse-plugin</artifactId>
                <version>2.9</version>
                <configuration>
                    <additionalProjectnatures>
                        <projectnature>org.springframework.ide.eclipse.core.springnature</projectnature>
                    </additionalProjectnatures>
                    <additionalBuildcommands>
                        <buildcommand>org.springframework.ide.eclipse.core.springbuilder</buildcommand>
                    </additionalBuildcommands>
                    <downloadSources>true</downloadSources>
                    <downloadJavadocs>true</downloadJavadocs>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>2.5.1</version>
                <configuration>
                    <source>${java-version}</source>	<!-- 작업용 java version -->
                    <target>${java-version}</target>	<!-- 운영 server java version -->
                    <compilerArgument>-Xlint:all</compilerArgument>
                    <showWarnings>true</showWarnings>
                    <showDeprecation>true</showDeprecation>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <version>1.2.1</version>	<!-- maven version -->
                <configuration>
                    <mainClass>org.test.int1.Main</mainClass>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>
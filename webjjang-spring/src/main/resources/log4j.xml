<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE log4j:configuration PUBLIC "-//APACHE//DTD LOG4J 1.2//EN" "log4j.dtd">
<log4j:configuration xmlns:log4j="http://jakarta.apache.org/log4j/">

	<!-- Appenders -->
	<appender name="console" class="org.apache.log4j.ConsoleAppender">
		<param name="Target" value="System.out" />
		<layout class="org.apache.log4j.PatternLayout">
			<param name="ConversionPattern" value="%-5p: %c - %m%n" />
		</layout>
	</appender>
	
	<!-- Application Loggers -->
<!-- 	<logger name="org.zerock.controller"> -->
	<logger name="org.zerock">
		<level value="info" />
	</logger>
	
	<!-- 3rdparty Loggers -->
	<logger name="org.springframework.core">
		<level value="info" />
	</logger>
	
	<logger name="org.springframework.beans">
		<level value="info" />
	</logger>
	
	<logger name="org.springframework.context">
		<level value="info" />
	</logger>

	<logger name="org.springframework.web">
		<level value="info" />
	</logger>

	<!-- Root Logger -->
	<root>
		<priority value="info" />
		<appender-ref ref="console" />
	</root>
<!-- 
	<priority value="warn" />
	 => 
	<priority value="info" />
	
	1) TRACE
	가장 상세한 로그 레벨로, 애플리케이션의 실행 흐름과 디버깅 정보를 상세히 기록한다. 주로 디버깅 시에 사용된다.
	
	2) DEBUG
	디버깅 목적으로 사용되며, 개발 단계에서 상세한 정보를 기록한다.
	애플리케이션의 내부 동작을 이해하고 문제를 분석하는 데 도움을 준다.
	
	3) INFO
	정보성 메시지를 기록한다.
	애플리케이션의 주요 이벤트나 실행 상태에 대한 정보를 전달한다. 
	
	4) WARN
	경고성 메시지를 기록한다.
	예상치 못한 문제나 잠재적인 오류 상황을 알리는 메시지이다.
	애플리케이션이 정상적으로 동작하지만 주의가 필요한 상황을 알려준다.
	
	5) ERROR
	오류 메시지를 기록한다.
	심각한 문제 또는 예외 상황을 나타내며, 애플리케이션의 정상적인 동작에 영향을 미칠 수 있는 문제를 알린다.
	
	6) FATAL
	가장 심각한 오류 메시지를 기록한다.
	애플리케이션의 동작을 중단시킬 수 있는 치명적인 오류를 나타낸다.
	일반적으로 이러한 오류는 복구가 불가능하거나 매우 어려운 상황을 의미한다.
 -->	
	
</log4j:configuration>
